## the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
#type = singlecore # run local
ncores = 4 # optionally, specify number of cores (autodetect by default)
# specificy destination file using scan numbers
destination = name_{projection}_{first}-{last}_{limits}.hdf5
overwrite = false

### choose an appropriate INPUT class and specify custom options
[input]
#: the list of the available values are:
#type = sixs:flymedh
#type = sixs:flymedhgisaxs
#type = sixs:flymedv
#type = sixs:flymedvgisaxs
#type = sixs:flyuhv
#type = sixs:flyuhvgisaxs
#type = sixs:sbsmedh
#type = sixs:sbsmedhgisaxs
#type = sixs:sbsmedv
#type = sixs:sbsmedvgisaxs
#type = sixs:sbsuhv
#type = sixs:sbsuhvgisaxs
type = custom

nexusdir = /nfs/ruche-sixs/sixs-soleil/com-sixs/2023/Run4/Feng_20230524
#inputrange = 1087-1121

# the list of known detectors is:
#detector = ImXpadS70
detector = ImXpadS140
#detector = Eiger1M
#detector = Ufxc
#detector = Merlin
#detector = MerlinMedipix3RXQuad

centralpixel = 277, 111   # x,y
sdd = 1.161          # sample to detector distance (m)
detrot = 90   #  ImXpadS140 (0째 => Horizontal detector ;    90째 => Vertical detector)
#                Eiger1M    (0째 => Horizontal bar      ;   -90째 => Vertical bar)

#attenuation_coefficient = 5
#attenuation_max = 4
#image_sum_max = 1000000

#maskmatrix = default
maskmatrix =  /nfs/ruche-sixs/sixs-soleil/com-sixs/2023/Run4/Feng_20230524/align/mask_nxs00021_20230913_14h25.npy   # ImXpadS140
#maskmatrix = /nfs/ruche-sixs/sixs-soleil/com-sixs/binoculars/mask_eiger_20230630.npy  # Eiger1M (ATTENTION  au format > uint8)
#wavelength = 1.54 # (if not in nxsfile !)

#a = 1.54	## Used only for HKL projection
#b = 1.54	## Used only for HKL projection
#c= 1.54	## Used only for HKL projection
#alpha	= 90.	## Used only for HKL projection
#beta = 90.	## Used only for HKL projection
#gamma = 90.	## Used only for HKL projection
#ux = -90.	## Used only for HKL projection
#uy = 0.	## Used only for HKL projection
#uz = 0.	## Used only for HKL projection

surface_orientation = vertical 		## Used only for Q projection (ATTENTION '_')
#surface_orientation = horizontal 	## Used only for Q projection

[projection]

#type = hkl # refers to HklProjection
#type = qxqyqz # refers to QxQyQz
#type = qparqper # refers to Qpar Qper
#type = qindex # refers to q time
#type = realspace
#type = pixels

type = qcustom #
#subprojection = qx_qy_qz
#subprojection = q_qpar_qper
subprojection = q_tth_timestamp
#subprojection = qpar_qper_sampleaxis
#subprojection = q_sampleaxis_tth
#subprojection = gammalab_deltalab_sampleaxis  # med geometry with beta=0 et mu=0
#simpleaxis = omega
#subprojection = q_timestamp
#subprojection = q_index  # ne fonctionne pas !!!
#subprojection = qpar_qper_timestamp
#subprojection = qpars_qper_timestamp
#subprojection = gammalab_deltalab_sampleaxis
#subprojection = qpar_qper
#subprojection = q_phi_qx
#subprojection = q_phi_qy
#subprojection = q_phi_qz
#subprojection = q_stereo
#subprojection = x_y_z
#subprojection = y_z_timestamp

#uqx = 0.	## Used only for Q projection
#uqy = 0.	## Used only for Q projection
#uqz = 0.	## Used only for Q projection

#resolution = 0.005, 0.005, 200
resolution = 0.002, 0.002, 0.004  # or just give 1 number for all dimensions
#limits = [0.7:1,-1.6:-1.3,:]

#source /usr/local/applications/diffractions/binoculars/v0.0.1/env.sh

[geometry]
geometry_sample = pitch, mu
geometry_detector = pitch, gamma, delta

axis_pitch = rotation 0 -1 0 deg
axis_mu = rotation 0 0 1 deg
axis_gamma = rotation 0 0 1 deg
axis_delta = rotation 0 -1 0 deg

#[geometry.values]
#beta = 0.0
#mu
#omega
#delta
#gamma
#eix
#eiz
