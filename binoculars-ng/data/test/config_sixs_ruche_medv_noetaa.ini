### the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
cores = 10 # optionally, specify number of cores (autodetect by default)

# specificy destination file using scan numbers
destination = noetaa_{first}-{last}.hdf5
overwrite = False

### choose an appropriate INPUT class and specify custom options
[input]##
#type = sixs:flyscanuhv  # refers to class Sixs in BINoculars/backends/sixs.py
type = sixs:sbsmedv
nexusdir = /nfs/ruche-sixs/sixs-soleil/com-sixs/2025/Run2/Prevot_20240289/Ag2e

## approximate number of images per job, only useful when running on the oar cluster
target_weight = 100

# technical data for this particular input class
centralpixel = 277, 106   # x,y
sdd = 1.169              # sample to detector distance (m)
detrot = 90.0
attenuation_coefficient = 1.72
maskmatrix = default
### choose PROJECTION plus resolution
## projections: realspace, pixels, hklprojection, hkprojection, qxqyqzprojection, qparqperprojection
[projection]
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
type = sixs:hklprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qxqyqzprojection # refers to HKProjection in BINoculars/backends/sixs.py
#type = sixs:qparqperprojection # refers to HKProjection in BINoculars/backends/sixs.py
resolution = 0.002
#resolution = 0.0002, 0.0002, 0.02  # or just give 1 number for all dimensions
#limits = [.9:1.1,0.96:1.04,:]
#limits = [.8:1.2,0.95:1.05,:]
#limits = [.8:1.2,-2.05:-1.95,:]
#limits = [-2.2:-1.8,0.95:1.05,:]
#limits = [.95:1.05,0.95:1.05,5.8:6.2]

#source /usr/local/applications/diffractions/binoculars/v0.0.1/env.sh

[geometry.values]
etaa = 0.0