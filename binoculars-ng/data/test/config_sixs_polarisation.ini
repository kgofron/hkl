## the DISPATCHER is responsible for job management
[dispatcher]
type = local # run local
#type = singlecore # run local
ncores = 4 # optionally, specify number of cores (autodetect by default)
# specificy destination file using scan numbers
destination = Test_True_{projection}_{first}-{last}_{limits}.hdf5
#destination = SLBTN20_01_{projection}_{first}-{last}_{limits}.hdf5
overwrite = False

### choose an appropriate INPUT class and specify custom options
[input]
#: the list of the available values are:
#type = sixs:flymedh
#type = sixs:flymedhgisaxs
#type = sixs:flymedv
#type = sixs:flymedvgisaxs
type = sixs:flyuhv
#type = sixs:flyuhvgisaxs
#type = sixs:sbsmedh
#type = sixs:sbsmedhgisaxs
#type = sixs:sbsmedv
#type = sixs:sbsmedvgisaxs
#type = sixs:sbsuhv
#type = sixs:sbsuhvgisaxs

#nexusdir = /nfs/ruche-sixs/sixs-soleil/com-sixs/2025/Run1/torrelles_20240698/SBT20_07/
nexusdir = /nfs/ruche/sixs-soleil/com-sixs/2025/Run1/torrelles_20240698/
#nexusdir =/nfs/ruche-sixs/sixs-soleil/com-sixs/2025/Run1/torrelles_20240698/SLBTN20_01/
#inputrange = 1087-1121

# the list of known detectors is:
detector = ImXpadS140
#detector = ImXpadS140, {type="int32", value="hdf5://..."}
#detector = Eiger1M
#detector = Ufxc
#detector = Merlin
#detector = MerlinMedipix3RXQuad
#detector = MerlinMedipix3RXQuad512

images = [{"contents":[{"detector":"ImXpadS140"},1],"tag":"DataSourcePath'Image'Dummy"}]


# {"dataFrameHkl'DataFrameQCustom":[{"attenuationPath":{"contents":{"contents":[0,{"contents":"scan_data/attenuation","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"attenuationPathCoefficient":0,"attenuationPathMax":null,"attenuationPathOffset":2,"tag":"DataSourcePath'Attenuation"},{"geometryGeometry":{"contents":["Uhv",null],"tag":"Geometry'Factory"},"geometryPathAxes":[{"contents":{"contents":{"contents":[0,{"contents":"scan_data/UHV_MU","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Double"},{"contents":{"contents":{"contents":[0,{"contents":"scan_data/UHV_OMEGA","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Double"},{"contents":{"contents":{"contents":[0,{"contents":"scan_data/UHV_DELTA","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Double"},{"contents":{"contents":{"contents":[0,{"contents":"scan_data/UHV_GAMMA","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Double"}],"geometryPathWavelength":{"contents":{"contents":{"contents":[0,{"contents":"SIXS/Monochromator/wavelength","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Double"},"tag":"DataSourcePath'Geometry"},{"contents":[{"detector":"ImXpadS140"},{"contents":{"contents":[0,{"contents":"scan_data/xpad_image","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"}],"tag":"DataSourcePath'Image'Hdf5"},{"contents":[{"contents":"","tag":"MaskLocation"},{"detector":"ImXpadS140"}],"tag":"DataSourcePath'Mask"},{"contents":{"contents":{"contents":[0,{"contents":"scan_data/epoch","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Timestamp"},{"contents":{"contents":{"contents":[0,{"contents":"scan_data/epoch","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Timescan0"},[]],"dataFrameHkl'Sample":{"contents":[{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/A","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Double"},{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/B","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Double"},{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/C","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Double"},{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/Alpha","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Degree"},{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/Beta","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Degree"},{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/Gamma","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Degree"},{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/Ux","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Degree"},{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/Uy","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Degree"},{"contents":{"contents":{"contents":[0,{"contents":"SIXS/I14-C-CX2__EX__DIFF-UHV__#1/Uz","tag":"H5DatasetPath"}],"tag":"H5GroupAtPath"},"tag":"H5RootPath"},"tag":"DataSourcePath'Degree"}],"tag":"DataSourcePath'Sample"}}

#detector_data={type=dummy, data="1.0"}
#detector_data={type=dummy, data="1.0"}
#detector_data={type=dummy, double=1:10}
#detector_data={type=dummy, double=rand}
#detector_data={type=hdf5, location="@0/scan_data/xpad_image"}
#detector_data={type=hdf5, location="@0/scan_data/@attr(long_name == \"toto\")"}
#detector_data={type=img, template=".*/{scannumder:04d}.img"}

centralpixel = 290, 89   # x,y
sdd = 1.2113          # sample to detector distance (m)
detrot = 90   #  ImXpadS140 (0째 => Horizontal detector ;    90째 => Vertical detector)
#                Eiger1M    (0째 => Horizontal bar      ;   -90째 => Vertical bar)

attenuation_coefficient = 2.667
attenuation_shift = 0
#attenuation_max = 4

#image_sum_max = 1000000
#skip_first_points
#skip_last_points

polarization_correction = True

#maskmatrix = default
maskmatrix = /nfs/ruche/sixs-soleil/com-sixs/2025/Run1/torrelles_20240698/SBT20_07/mask_nxs00071_20250219_09h44.npy  # ImXpadS140
#maskmatrix = /nfs/ruche-sixs/sixs-soleil/com-sixs/2022/Run5/20220739_kutyla/y227yh2/mask_{scannumder:05d}.npy ######
#wavelength = 1.54 # (if not in nxsfile !)

#a = 3.833	## Used only for HKL projection
#b = 3.833	## Used only for HKL projection
#c= 3.833	## Used only for HKL projection
#alpha	= 90.0	## Used only for HKL projection
#beta = 90.0	## Used only for HKL projection
#gamma = 90.0	## Used only for HKL projection
#ux = -90.2692	## Used only for HKL projection
#uy = -0.0232	## Used only for HKL projection
#uz = -134.5150	## Used only for HKL projection

surface_orientation = vertical 		## Used only for Q projection (ATTENTION '_')
#surface_orientation = horizontal 	## Used only for Q projection

[projection]

type = hkl # refers to HklProjection
#type = qxqyqz # refers to QxQyQz
#type = qparqper # refers to Qpar Qper
#type = qindex # refers to q time
#type = realspace
#type = pixels

#type = qcustom #
#subprojection = qx_qy_qz
#subprojection = qpar_qper
#subprojection = q_qpar_qper
#subprojection = q_tth_timestamp
#subprojection = qpar_qper_sampleaxis
#subprojection = q_sampleaxis_tth

#subprojection = qpar_qper_timestamp
#subprojection = qpars_qper_timestamp
#subprojection = q_sampleaxis_timestamp
#subprojection = qx_qy_timestamp
#subprojection = qx_qz_timestamp
#subprojection = qy_qy_timestamp
#subprojection = q_timestamp
#subprojection = q_timescan0
#subprojection = q_index  # ne fonctionne pas !!!

#subprojection = q_phi_qx
#subprojection = q_phi_qy
#subprojection = q_phi_qz
#subprojection = phix_q_thetax
#subprojection = phiy_q_thetay
#subprojection = phiz_q_thetaz
#subprojection = q_stereo

#subprojection = gammalab_deltalab_sampleaxis  # med geometry with beta=0 et mu=0

#subprojection = x_y_z
#subprojection = y_z_timestamp

#sampleaxis = omega

#uqx = 0.0	## Used only for Q projection
#uqy = 0.0	## Used only for Q projection
#uqz = 0.0	## Used only for Q projection

#resolution = 0.005, 0.005, 200
resolution = 0.005, 0.005, 0.005  # or just give 1 number for all dimensions

limits = [:,:,0.0407:]

[geometry.values]
#beta = 0
#mu
#omega
#delta
#gamma
#eix
#eiz

end=true
